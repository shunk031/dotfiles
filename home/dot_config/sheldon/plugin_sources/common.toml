# `sheldon` configuration file
# ----------------------------
#
# You can modify this file directly or you can use one of the following
# `sheldon` commands which are provided to assist in editing the config file:
#
# - `sheldon add` to add a new plugin to the config file
# - `sheldon edit` to open up the config file in the default editor
# - `sheldon remove` to remove a plugin from the config file
#
# See the documentation for more https://github.com/rossmacarthur/sheldon#readme

shell = "zsh"

#
# Sheldon Templates
#

[templates]
defer = """
{% for file in files %}
zsh-defer source "{{ file }}"
{% endfor %}
"""

fzf-install = """
{{ dir }}/install --bin > /dev/null
path=(
    $path
    {{ dir }}/bin(N-/)
)
"""

fzf-source = """
source <(fzf --zsh)

export FZF_DEFAULT_OPTS="--reverse"
"""

#
# Deferred Loading of Plugins in Zsh
#

[plugins.zsh-defer]
github = 'romkatv/zsh-defer'
apply = ['source']

#
# Autoloading of Functions in Zsh
#

[plugins.compinit]
inline = 'autoload -Uz compinit && zsh-defer compinit'

[plugins.custom-commands]
inline = 'autoload -Uz dev'

#
# Zsh-related Plugins
#

[plugins.zsh-autosuggestions]
github = 'zsh-users/zsh-autosuggestions'
apply = ['defer']

[plugins.zsh-completions]
github = 'zsh-users/zsh-completions'
apply = ['defer']

[plugins.zsh-syntax-highlighting]
github = 'zsh-users/zsh-syntax-highlighting'
apply = ['defer']

[plugins.zsh-autopair]
github = 'hlissner/zsh-autopair'
apply = ['defer']

[plugins.zsh-history-on-success]
github = 'nyoungstudios/zsh-history-on-success'
apply = ['defer']

[plugins.zsh-history]
inline = '''
function _zsh_history() {
    setopt BANG_HIST              # Treat the '!' character specially during expansion.
    setopt EXTENDED_HISTORY       # Write the history file in the ':start:elapsed;command' format.
    setopt SHARE_HISTORY          # Share history between all sessions.
    setopt HIST_EXPIRE_DUPS_FIRST # Expire a duplicate event first when trimming history.
    setopt HIST_IGNORE_DUPS       # Do not record an event that was just recorded again.
    setopt HIST_IGNORE_ALL_DUPS   # Delete an old recorded event if a new event is a duplicate.
    setopt HIST_FIND_NO_DUPS      # Do not display a previously found event.
    setopt HIST_IGNORE_SPACE      # Do not record an event starting with a space.
    setopt HIST_SAVE_NO_DUPS      # Do not write a duplicate event to the history file.
    setopt HIST_VERIFY            # Do not execute immediately upon history expansion.
    setopt HIST_BEEP              # Beep when accessing non-existent history.

    export HISTFILE=${HOME}/.zsh_history
    export HISTSIZE=10000
    export SAVEHIST=10000
}
zsh-defer _zsh_history
'''

#
# Mise for managing multiple versions of tools
#

[plugins.mise]
inline = 'eval "$(~/.local/bin/mise activate zsh)"'

#
# Language-related plugins
#

[plugins.lang]
inline = '''
function _lang() {
    export LANG='en_US.UTF-8'
}
zsh-defer _lang
'''

[plugins.go]
inline = '''
function _go() {
    export GOPATH="${HOME}/ghq"
    export GOROOT=$(go env GOROOT)

    typeset -gU path
    path=(
        $path
        ${GOPATH}/bin(N-/)
        ${HOME}/.go/bin(N-/)
    )
}
zsh-defer _go
'''

[plugins.rust]
inline = '''
function _rust() {
    typeset -gU path
    path=(
        $path
        ${HOME}/.cargo/bin(N-/)
    )
}
zsh-defer _rust
'''

#
# fzf
#

[plugins.fzf]
github = 'junegunn/fzf'
use = ['shell/completion.zsh', 'shell/key-bindings.zsh']
apply = ['fzf-install', 'fzf-source']

#
# Alias
#

[plugins.common-alias]
local = '~/.config/alias'
use = ['common.sh']
apply = ['source']

# [plugins.private-alias]
# local = '~/.config/alias'
# use = ['private.sh']
# apply = ['source']

#
#
#

[plugins.gpg]
inline = '''
function _gpg() {
    export GPG_TTY=$(tty)
}
zsh-defer _gpg
'''

#
# Private/Work-related Plugins
#

[plugins.private-dotfiles]
inline = '''
function _private_dotfiles() {
    local filepath="${HOME}/.workrc"
    if [ -f "$filepath" ]; then
        source "$filepath"
    fi
}
zsh-defer _private_dotfiles
'''
